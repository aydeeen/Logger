{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\CooleX\\\\Desktop\\\\Projects\\\\logger\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_LOGS, SET_LOADING, LOGS_ERROR } from \"../actions/types\";\nimport { statement } from \"@babel/template\";\nconst initialState = {\n  logs: null,\n  current: null,\n  loading: false,\n  error: null\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case GET_LOGS:\n      return _objectSpread({}, state, {\n        logs: action.payload\n      });\n\n    case SET_LOADING:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case LOGS_ERROR:\n      console.log(action.payload);\n      return _objectSpread({}, state, {\n        error: action.payload\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:\\Users\\CooleX\\Desktop\\Projects\\logger\\src\\reducers\\logReducer.js"],"names":["GET_LOGS","SET_LOADING","LOGS_ERROR","statement","initialState","logs","current","loading","error","state","action","type","payload","console","log"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,UAAhC,QAAkD,kBAAlD;AACA,SAASC,SAAT,QAA0B,iBAA1B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,IADa;AAEnBC,EAAAA,OAAO,EAAE,IAFU;AAGnBC,EAAAA,OAAO,EAAE,KAHU;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;AAOA,gBAAe,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKX,QAAL;AACI,+BACOS,KADP;AAEIJ,QAAAA,IAAI,EAAEK,MAAM,CAACE;AAFjB;;AAKN,SAAKX,WAAL;AACE,+BACKQ,KADL;AAEEF,QAAAA,OAAO,EAAE;AAFX;;AAIF,SAAKL,UAAL;AACEW,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACE,OAAnB;AACA,+BACKH,KADL;AAEED,QAAAA,KAAK,EAAEE,MAAM,CAACE;AAFhB;;AAIF;AACE,aAAOH,KAAP;AAnBJ;AAqBD,CAtBD","sourcesContent":["import { GET_LOGS, SET_LOADING, LOGS_ERROR } from \"../actions/types\";\r\nimport { statement } from \"@babel/template\";\r\n\r\nconst initialState = {\r\n  logs: null,\r\n  current: null,\r\n  loading: false,\r\n  error: null\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n      case GET_LOGS:\r\n          return {\r\n              ...state,\r\n              logs: action.payload,\r\n              \r\n          }\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case LOGS_ERROR:\r\n      console.log(action.payload);\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}