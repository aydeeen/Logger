{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\CooleX\\\\Desktop\\\\Projects\\\\logger\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_LOGS, SET_LOADING, LOGS_ERROR, ADD_LOG, DELETE_LOG, UPDATE_LOG, SET_CURRENT, CLEAR_CURRENT } from \"../actions/types\";\nconst initialState = {\n  logs: null,\n  current: null,\n  loading: false,\n  error: null\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case GET_LOGS:\n      return _objectSpread({}, state, {\n        logs: action.payload,\n        loading: false\n      });\n\n    case ADD_LOG:\n      return _objectSpread({}, state, {\n        logs: [...state.logs, action.payload],\n        loading: false\n      });\n\n    case DELETE_LOG:\n      return _objectSpread({}, state, {\n        logs: state.logs.filter(log => log.id !== action.payload),\n        loading: false\n      });\n\n    case SET_CURRENT:\n      return _objectSpread({}, state);\n\n    case SET_LOADING:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case LOGS_ERROR:\n      console.log(action.payload);\n      return _objectSpread({}, state, {\n        error: action.payload\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:\\Users\\CooleX\\Desktop\\Projects\\logger\\src\\reducers\\logReducer.js"],"names":["GET_LOGS","SET_LOADING","LOGS_ERROR","ADD_LOG","DELETE_LOG","UPDATE_LOG","SET_CURRENT","CLEAR_CURRENT","initialState","logs","current","loading","error","state","action","type","payload","filter","log","id","console"],"mappings":";;;;;;AAAA,SACEA,QADF,EAEEC,WAFF,EAGEC,UAHF,EAIEC,OAJF,EAKEC,UALF,EAMEC,UANF,EAOEC,WAPF,EAQEC,aARF,QASO,kBATP;AAWA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,IADa;AAEnBC,EAAAA,OAAO,EAAE,IAFU;AAGnBC,EAAAA,OAAO,EAAE,KAHU;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;AAOA,gBAAe,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKf,QAAL;AACE,+BACKa,KADL;AAEEJ,QAAAA,IAAI,EAAEK,MAAM,CAACE,OAFf;AAGEL,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKR,OAAL;AACE,+BACKU,KADL;AAEEJ,QAAAA,IAAI,EAAE,CAAC,GAAGI,KAAK,CAACJ,IAAV,EAAgBK,MAAM,CAACE,OAAvB,CAFR;AAGEL,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKP,UAAL;AACE,+BACKS,KADL;AAEEJ,QAAAA,IAAI,EAAEI,KAAK,CAACJ,IAAN,CAAWQ,MAAX,CAAkBC,GAAG,IAAIA,GAAG,CAACC,EAAJ,KAAWL,MAAM,CAACE,OAA3C,CAFR;AAGEL,QAAAA,OAAO,EAAE;AAHX;;AAKA,SAAKL,WAAL;AACE,+BACKO,KADL;;AAGJ,SAAKZ,WAAL;AACE,+BACKY,KADL;AAEEF,QAAAA,OAAO,EAAE;AAFX;;AAIF,SAAKT,UAAL;AACEkB,MAAAA,OAAO,CAACF,GAAR,CAAYJ,MAAM,CAACE,OAAnB;AACA,+BACKH,KADL;AAEED,QAAAA,KAAK,EAAEE,MAAM,CAACE;AAFhB;;AAIF;AACE,aAAOH,KAAP;AAnCJ;AAqCD,CAtCD","sourcesContent":["import {\r\n  GET_LOGS,\r\n  SET_LOADING,\r\n  LOGS_ERROR,\r\n  ADD_LOG,\r\n  DELETE_LOG,\r\n  UPDATE_LOG,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  logs: null,\r\n  current: null,\r\n  loading: false,\r\n  error: null\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_LOGS:\r\n      return {\r\n        ...state,\r\n        logs: action.payload,\r\n        loading: false\r\n      };\r\n    case ADD_LOG:\r\n      return {\r\n        ...state,\r\n        logs: [...state.logs, action.payload],\r\n        loading: false\r\n      };\r\n    case DELETE_LOG:\r\n      return {\r\n        ...state,\r\n        logs: state.logs.filter(log => log.id !== action.payload),\r\n        loading: false\r\n      };\r\n      case SET_CURRENT:\r\n        return {\r\n          ...state,\r\n        }\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case LOGS_ERROR:\r\n      console.log(action.payload);\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}