{"version":3,"sources":["actions/logActions.js","actions/types.js","components/layout/SearchBar.js","components/logs/LogItem.js","components/layout/Preloader.js","components/logs/Logs.js","components/layout/AddBtn.js","actions/techActions.js","components/techs/TechSelectOptions.js","components/logs/AddLogModal.js","components/logs/EditLogModal.js","components/techs/AddTechModal.js","components/techs/TechItem.js","components/techs/TechListModal.js","reducers/logReducer.js","reducers/techReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["setLoading","type","connect","searchLogs","text","dispatch","a","fetch","res","json","data","payload","response","statusText","useRef","style","marginBottom","className","id","placeholder","ref","onChange","e","current","value","htmlFor","deleteLog","method","setCurrent","log","href","attention","onClick","message","tech","format","date","M","toast","html","Preloader","state","getLogs","logs","loading","useEffect","length","map","key","AddBtn","getTechs","techs","t","firstName","lastName","modalStyle","width","height","addLog","body","JSON","stringify","headers","useState","setMessage","setAttention","setTech","name","target","disabled","checked","newLog","Date","EditLogModal","updateLog","updLog","protoTypes","PropTypes","object","update","func","isRequired","addTech","setFirstName","setLastName","deleteTech","initialState","error","combineReducers","action","filter","console","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","AutoInit","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dc0ca7b5.chunk.js","sourcesContent":["import {\r\n  GET_LOGS,\r\n  SET_LOADING,\r\n  LOGS_ERROR,\r\n  ADD_LOG,\r\n  DELETE_LOG,\r\n  UPDATE_LOG,\r\n  SET_CURRENT,\r\n  SEARCH_LOGS,\r\n  CLEAR_CURRENT\r\n} from \"./types\";\r\n\r\n/* export const getLogs = () => {\r\n  return async dispatch => {\r\n    setLoading();\r\n\r\n    const res = await fetch(\"/logs\");\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: GET_LOGS,\r\n      payload: data\r\n    });\r\n  };\r\n};\r\n */\r\n\r\n// Get logs from server\r\nexport const getLogs = () => async dispatch => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch(\"/logs\");\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: GET_LOGS,\r\n      payload: data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: err.response.statusText\r\n    });\r\n  }\r\n};\r\n\r\n// Add new log\r\nexport const addLog = log => async dispatch => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch(\"/logs\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(log),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: ADD_LOG,\r\n      payload: data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: err.response.statusText\r\n    });\r\n  }\r\n};\r\n\r\n// Set current log\r\nexport const setCurrent = log => {\r\n  return {\r\n    type: SET_CURRENT,\r\n    payload: log\r\n  };\r\n};\r\n\r\n// Clear current log\r\nconst clearCurrent = () => {\r\n  return {\r\n    type: CLEAR_CURRENT\r\n  };\r\n};\r\n\r\n// Delete log from server\r\nexport const deleteLog = id => async dispatch => {\r\n  try {\r\n    setLoading();\r\n\r\n    await fetch(`/logs/${id}`, {\r\n      method: \"DELETE\"\r\n    });\r\n\r\n    dispatch({\r\n      type: DELETE_LOG,\r\n      payload: id\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: err.response.statusText\r\n    });\r\n  }\r\n};\r\n\r\n// Update log on server\r\nexport const updateLog = log => async dispatch => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch(`/logs/${log.id}`, {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(log),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: UPDATE_LOG,\r\n      payload: data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: err.response.statusText\r\n    });\r\n  }\r\n};\r\n\r\n// Search Logs\r\nexport const searchLogs = (text) => async dispatch => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch(`/logs?q=${text}`);\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: SEARCH_LOGS,\r\n      payload: data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGS_ERROR,\r\n      payload: err.response.statusText\r\n    });\r\n  }\r\n};\r\n\r\n// Set loading to true\r\nexport const setLoading = () => {\r\n  return {\r\n    type: SET_LOADING\r\n  };\r\n};\r\n","export const GET_LOGS = \"GET_LOGS\";\r\nexport const ADD_LOG = \"ADD_LOG\";\r\nexport const DELETE_LOG = \"DELETE_LOG\";\r\nexport const SET_CURRENT = \"SET_CURRENT\";\r\nexport const CLEAR_CURRENT = \"CLEAR_CURRENT\";\r\nexport const UPDATE_LOG = \"UPDATE_LOG\";\r\nexport const CLEAR_LOGS = \"CLEAR_LOGS\";\r\nexport const SET_LOADING = \"SET_LOADING\";\r\nexport const LOGS_ERROR = \"LOGS_ERROR\";\r\nexport const SEARCH_LOGS = \"SEARCH_LOGS\";\r\nexport const GET_TECHS = \"GET_TECHS\";\r\nexport const ADD_TECH = \"ADD_TECH\";\r\nexport const DELETE_TECH = \"DELETE_TECH\";\r\nexport const TECHS_ERROR = \"TECHS_ERROR\";\r\n","import React, { useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { searchLogs } from \"../../actions/logActions\";\r\n\r\nconst SearchBar = ({ searchLogs }) => {\r\n  const text = useRef(\"\");\r\n\r\n  const onChange = e => {\r\n    searchLogs(text.current.value);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <nav style={{ marginBottom: \"30px\" }} className='blue'>\r\n        <div className='nav-wrapper'>\r\n          <form>\r\n            <div className='input-field'>\r\n              <input id='search' type='search' placeholder='Search Logs...' ref={text} onChange={onChange} />\r\n              <label className='label-icon' htmlFor='search'>\r\n                <i className='material-icons'>search</i>\r\n              </label>\r\n              <i className='material-icons'>close</i>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nSearchBar.propTypes = {\r\n  searchLogs: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { searchLogs }\r\n)(SearchBar);\r\n","import React from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { deleteLog, setCurrent } from \"../../actions/logActions\";\r\n\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\n\r\nconst LogItem = ({ log, deleteLog, setCurrent }) => {\r\n  const onDelete = () => {\r\n    deleteLog(log.id);\r\n    M.toast({ html: \"Log Deleted\" });\r\n  };\r\n\r\n  return (\r\n    <li className='collection-item'>\r\n      <div>\r\n        <a\r\n          href='#edit-log-modal'\r\n          className={`modal-trigger ${\r\n            log.attention ? \"red-text\" : \"blue-text\"\r\n          }`}\r\n          onClick={() => setCurrent(log)}\r\n        >\r\n          {log.message}\r\n        </a>\r\n        <br />\r\n        <span className='grey-text'>\r\n          <span className='black-text'>ID #{log.id}</span> last updated by{\" \"}\r\n          <span className='black-text'>{log.tech}</span> on{\" \"}\r\n          <Moment format='MMMM Do YYYY, h:mm:ss a'>{log.date}</Moment>\r\n        </span>\r\n        <a href='#!' onClick={onDelete} className='secondary-content'>\r\n          <i className='material-icons grey-text'>delete</i>\r\n        </a>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nLogItem.propTypes = {\r\n  log: PropTypes.object.isRequired,\r\n  deleteLog: PropTypes.func.isRequired,\r\n  setCurrent: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteLog, setCurrent }\r\n)(LogItem);\r\n","import React from 'react'\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className=\"progress blue lighten-4\">\r\n            <div className=\"indeterminate\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport LogItem from \"./LogItem\";\r\nimport Preloader from \"../layout/Preloader\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getLogs } from \"../../actions/logActions\";\r\n\r\nconst Logs = ({ log: { logs, loading }, getLogs }) => {\r\n  useEffect(() => {\r\n    getLogs();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  if (loading || logs === null) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  return (\r\n    <ul className='collection with-header'>\r\n      <li className='collection-header'>\r\n        <h4 className='center'>System Logs</h4>\r\n      </li>\r\n\r\n      {!loading && logs.length === 0 ? (\r\n        <p className='center'>No logs to show...</p>\r\n      ) : (\r\n        logs.map(log => <LogItem log={log} key={log.id} />)\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nLogs.propTypes = {\r\n  log: PropTypes.object.isRequired,\r\n  getLogs: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  log: state.log\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getLogs }\r\n)(Logs);\r\n","import React from 'react'\r\n\r\nconst AddBtn = () => {\r\n    return (\r\n        <div className=\"fixed-action-btn\">\r\n            <a href=\"#add-log-modal\" className=\"btn-floating btn-large blue darken-2 modal-trigger\">\r\n                <i className=\"large material-icons\">\r\n                    add\r\n                </i>\r\n            </a>\r\n            <ul>\r\n                <li>\r\n                    <a href=\"#tech-list-modal\" className=\"btn-floating green modal-trigger\">\r\n                        <i className=\"material-icons\">person</i>\r\n                    </a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"#add-tech-modal\" className=\"btn-floating red modal-trigger\">\r\n                        <i className=\"material-icons\">person_add</i>\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddBtn\r\n","import {\r\n  GET_TECHS,\r\n  ADD_TECH,\r\n  DELETE_TECH,\r\n  SET_LOADING,\r\n  TECHS_ERROR\r\n} from \"./types\";\r\n\r\n// Get techs from server\r\nexport const getTechs = () => async dispatch => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch(\"/techs\");\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: GET_TECHS,\r\n      payload: data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: TECHS_ERROR,\r\n      payload: err.response.statusText\r\n    });\r\n  }\r\n};\r\n\r\n// Add technician to server\r\nexport const addTech = tech => async dispatch => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch(\"/techs\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(tech),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: ADD_TECH,\r\n      payload: data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: TECHS_ERROR,\r\n      payload: err.response.statusText\r\n    });\r\n  }\r\n};\r\n\r\n// Get techs from server\r\nexport const deleteTech = id => async dispatch => {\r\n  try {\r\n    setLoading();\r\n\r\n    await fetch(`/techs/${id}`, {\r\n      method: \"DELETE\"\r\n    });\r\n\r\n    dispatch({\r\n      type: DELETE_TECH,\r\n      payload: id\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: TECHS_ERROR,\r\n      payload: err.response.statusText\r\n    });\r\n  }\r\n};\r\n\r\n// Set loading to true\r\nexport const setLoading = () => {\r\n  return {\r\n    type: SET_LOADING\r\n  };\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getTechs } from \"../../actions/techActions\";\r\n\r\nconst TechSelectOptions = ({ getTechs, tech: { techs, loading } }) => {\r\n  useEffect(() => {\r\n    getTechs();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    !loading &&\r\n    techs !== null &&\r\n    techs.map(t => (\r\n      <option key={t.id} value={`${t.firstName} ${t.lastName}`}>\r\n        {t.firstName} {t.lastName}\r\n      </option>\r\n    ))\r\n  );\r\n};\r\n\r\nTechSelectOptions.propTypes = {\r\n    tech: PropTypes.object.isRequired,\r\n    getTechs: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  tech: state.tech\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getTechs }\r\n)(TechSelectOptions);\r\n","import React, { useState } from \"react\";\r\nimport TechSelecetOptions from '../techs/TechSelectOptions';\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { addLog } from \"../../actions/logActions\";\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\n\r\nconst AddLogModal = ({ addLog }) => {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [attention, setAttention] = useState(false);\r\n  const [tech, setTech] = useState(\"\");\r\n\r\n  const onSubmit = () => {\r\n    if (message === \"\" || tech === \"\") {\r\n      M.toast({ html: \"Please enter a mesage and tech\" });\r\n    } else {\r\n      const newLog = {\r\n        message,\r\n        attention,\r\n        tech,\r\n        date: new Date()\r\n      };\r\n\r\n      addLog(newLog);\r\n\r\n      M.toast({ html: `Log added by ${tech}` });\r\n\r\n      // Clear Fields\r\n      setMessage(\"\");\r\n      setTech(\"\");\r\n      setAttention(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id='add-log-modal' className='modal' style={modalStyle}>\r\n      <div className='modal-content'>\r\n        <h4>Enter System Log</h4>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <input\r\n              type='text'\r\n              name='message'\r\n              value={message}\r\n              onChange={e => setMessage(e.target.value)}\r\n            />\r\n            <label htmlFor='message' className='active'>\r\n              Log Message\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <select\r\n              name='tech'\r\n              value={tech}\r\n              className='browser-default'\r\n              onChange={e => setTech(e.target.value)}\r\n            >\r\n              <option value='' disabled>\r\n                Select Technician\r\n              </option>\r\n              <TechSelecetOptions />\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <p>\r\n              <label>\r\n                <input\r\n                  type='checkbox'\r\n                  className='filled-in'\r\n                  checked={attention}\r\n                  value={attention}\r\n                  onChange={e => setAttention(!attention)}\r\n                />\r\n                <span>Needs Attention</span>\r\n              </label>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <a\r\n          href='#!'\r\n          onClick={onSubmit}\r\n          className='modal-close waves-effect blue waves-light btn'\r\n        >\r\n          Enter\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nAddLogModal.propTypes = {\r\n  addLog: PropTypes.func.isRequired\r\n};\r\n\r\nconst modalStyle = {\r\n  width: \"75%\",\r\n  height: \"75%\"\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { addLog }\r\n)(AddLogModal);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport TechSelecetOptions from \"../techs/TechSelectOptions\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\nimport { updateLog } from \"../../actions/logActions\";\r\n\r\nconst EditLogModal = ({ current, updateLog }) => {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [attention, setAttention] = useState(false);\r\n  const [tech, setTech] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (current) {\r\n      setMessage(current.message);\r\n      setAttention(current.attention);\r\n      setTech(current.tech);\r\n    }\r\n  }, [current]);\r\n\r\n  const onSubmit = () => {\r\n    if (message === \"\" || tech === \"\") {\r\n      M.toast({ html: \"Please enter a mesage and tech\" });\r\n    } else {\r\n      const updLog = {\r\n        id: current.id,\r\n        message,\r\n        attention,\r\n        tech,\r\n        date: new Date()\r\n      };\r\n\r\n      updateLog(updLog);\r\n      M.toast({ html: `Log updated by ${tech}` });\r\n\r\n      // Clear Fields\r\n      setMessage(\"\");\r\n      setTech(\"\");\r\n      setAttention(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id='edit-log-modal' className='modal' style={modalStyle}>\r\n      <div className='modal-content'>\r\n        <h4>Enter System Log</h4>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <input\r\n              type='text'\r\n              name='message'\r\n              value={message}\r\n              onChange={e => setMessage(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <select\r\n              name='tech'\r\n              value={tech}\r\n              className='browser-default'\r\n              onChange={e => setTech(e.target.value)}\r\n            >\r\n              <option value='' disabled>\r\n                Select Technician\r\n              </option>\r\n              <TechSelecetOptions />\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <p>\r\n              <label>\r\n                <input\r\n                  type='checkbox'\r\n                  className='filled-in'\r\n                  checked={attention}\r\n                  value={attention}\r\n                  onChange={e => setAttention(!attention)}\r\n                />\r\n                <span>Needs Attention</span>\r\n              </label>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <a\r\n          href='#!'\r\n          onClick={onSubmit}\r\n          className='modal-close waves-effect blue waves-light btn'\r\n        >\r\n          Enter\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst modalStyle = {\r\n  width: \"75%\",\r\n  height: \"75%\"\r\n};\r\n\r\nEditLogModal.protoTypes = {\r\n  current: PropTypes.object,\r\n  update: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  current: state.log.current\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { updateLog }\r\n)(EditLogModal);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { addTech } from \"../../actions/techActions\";\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\n\r\nconst AddTechModal = ({ addTech }) => {\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n\r\n  const onSubmit = () => {\r\n    if (firstName === \"\" || lastName === \"\") {\r\n      M.toast({ html: \"Please enter first and last name\" });\r\n    } else {\r\n      addTech({\r\n        firstName,\r\n        lastName\r\n      })\r\n\r\n      M.toast({ html: `${firstName} ${lastName} was added as tech.` });\r\n\r\n      // Clear Fields\r\n      setFirstName(\"\");\r\n      setLastName(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id='add-tech-modal' className='modal'>\r\n      <div className='modal-content'>\r\n        <h4>New Technician</h4>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <input\r\n              type='text'\r\n              name='firstName'\r\n              value={firstName}\r\n              onChange={e => setFirstName(e.target.value)}\r\n            />\r\n            <label htmlFor='firstName' className='active'>\r\n              First Name\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <input\r\n              type='text'\r\n              name='lastName'\r\n              value={lastName}\r\n              onChange={e => setLastName(e.target.value)}\r\n            />\r\n            <label htmlFor='lastName' className='active'>\r\n              Last Name\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <a\r\n          href='#!'\r\n          onClick={onSubmit}\r\n          className='modal-close waves-effect blue waves-light btn'\r\n        >\r\n          Enter\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nAddTechModal.propTypes = {\r\n  addTech: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { addTech }\r\n)(AddTechModal);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { deleteTech } from \"../../actions/techActions\";\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\n\r\nconst TechItem = ({ tech, deleteTech }) => {\r\n  const onDelete = () => {\r\n    deleteTech(tech.id);\r\n    M.toast({ html: \"Technician deleted\" });\r\n  };\r\n\r\n  return (\r\n    <li className='collection-item'>\r\n      <div>\r\n        {tech.firstName} {tech.lastName}\r\n        <a\r\n          href='#!'\r\n          className='secondary-content'\r\n          onClick={onDelete}\r\n        >\r\n          <i className='material-icons grey-text'>delete</i>\r\n        </a>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nTechItem.propTypes = {\r\n  tech: PropTypes.object.isRequired,\r\n  deleteTech: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteTech }\r\n)(TechItem);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport TechItem from \"./TechItem\";\r\nimport { getTechs } from \"../../actions/techActions\";\r\n\r\nconst TechListModal = ({ getTechs, tech: { techs, loading } }) => {\r\n  useEffect(() => {\r\n    getTechs();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div id='tech-list-modal' className='modal'>\r\n      <div className='modal-content'>\r\n        <h4>Technician List</h4>\r\n        <ul className='collection'>\r\n          {!loading &&\r\n            techs !== null &&\r\n            techs.map(tech => <TechItem tech={tech} key={tech.id} />)}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTechListModal.propTypes = {\r\n  tech: PropTypes.object.isRequired,\r\n  getTechs: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  tech: state.tech\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getTechs }\r\n)(TechListModal);\r\n","import {\r\n  GET_LOGS,\r\n  SET_LOADING,\r\n  LOGS_ERROR,\r\n  ADD_LOG,\r\n  DELETE_LOG,\r\n  UPDATE_LOG,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  SEARCH_LOGS\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  logs: null,\r\n  current: null,\r\n  loading: false,\r\n  error: null\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_LOGS:\r\n      return {\r\n        ...state,\r\n        logs: action.payload,\r\n        loading: false\r\n      };\r\n    case ADD_LOG:\r\n      return {\r\n        ...state,\r\n        logs: [...state.logs, action.payload],\r\n        loading: false\r\n      };\r\n    case DELETE_LOG:\r\n      return {\r\n        ...state,\r\n        logs: state.logs.filter(log => log.id !== action.payload),\r\n        loading: false\r\n      };\r\n    case UPDATE_LOG:\r\n      return {\r\n        ...state,\r\n        logs: state.logs.map(log =>\r\n          log.id === action.payload.id ? action.payload : log\r\n        )\r\n      };\r\n    case SEARCH_LOGS:\r\n      return {\r\n        ...state,\r\n        logs: action.payload\r\n      };\r\n    case SET_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: action.payload\r\n      };\r\n    case CLEAR_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: null\r\n      };\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case LOGS_ERROR:\r\n      console.log(action.payload);\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  GET_TECHS,\r\n  ADD_TECH,\r\n  DELETE_TECH,\r\n  SET_LOADING,\r\n  TECHS_ERROR\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  techs: null,\r\n  loading: false,\r\n  error: null\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_TECHS:\r\n      return {\r\n        ...state,\r\n        techs: action.payload,\r\n        loading: false\r\n      };\r\n    case ADD_TECH:\r\n      return {\r\n        ...state,\r\n        techs: [...state.techs, action.payload],\r\n        loading: false\r\n      };\r\n      case DELETE_TECH:\r\n        return {\r\n          ...state,\r\n          techs: state.techs.filter(tech => tech.id !== action.payload),\r\n          loading: false\r\n        }\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case TECHS_ERROR:\r\n      console.error(action.payload);\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport logReducer from \"./logReducer\";\r\nimport techReducer from \"./techReducer\";\r\n\r\nexport default combineReducers({\r\n  log: logReducer,\r\n  tech: techReducer\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { Fragment, useEffect } from \"react\";\nimport SearchBar from \"./components/layout/SearchBar\";\nimport Logs from \"./components/logs/Logs\";\nimport AddBtn from \"./components/layout/AddBtn\";\nimport AddLogModal from \"./components/logs/AddLogModal\";\nimport EditLogModal from \"./components/logs/EditLogModal\";\nimport AddTechModal from \"./components/techs/AddTechModal\";\nimport TechListModal from \"./components/techs/TechListModal\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\n\nconst App = () => {\n  useEffect(() => {\n    // Init Materialize JS\n    M.AutoInit();\n  });\n  return (\n    <Provider store={store}>\n      <Fragment>\n        <SearchBar />\n        <div className='container'>\n          <AddBtn />\n          <AddLogModal />\n          <EditLogModal />\n          <AddTechModal />\n          <TechListModal />\n          <Logs />\n        </div>\n      </Fragment>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}